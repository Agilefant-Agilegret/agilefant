package fi.hut.soberit.agilefant.web;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.opensymphony.xwork2.Action;
import com.opensymphony.xwork2.ActionSupport;

import fi.hut.soberit.agilefant.exception.ObjectNotFoundException;
import flexjson.JSON;


@Component("ajaxExceptionHandler")
@Scope("prototype")
public class AjaxExceptionHandler extends ActionSupport {

    private static final long serialVersionUID = -3087595845171961874L;

    private Exception exception;
    
    private String errorMessage;
    
    // Exception results
    public static final String genericExceptionResult      = "genericException";
    public static final String constraintViolationResult   = "conflict";
    public static final String illegalArgumentResult       = "input";
    public static final String objectNotFoundResult        = "objectNotFound";
    
    

    public String handle() {
        if (exception instanceof ObjectNotFoundException) {
            return this.handleObjectNotFoundException((ObjectNotFoundException)exception);
        }
        errorMessage = exception.getMessage();
        return genericExceptionResult;
    }
    
    public String handleObjectNotFoundException(ObjectNotFoundException onfe) {
        if (onfe.getI18nKey() != null) {
            this.errorMessage = getText(onfe.getI18nKey());
        }
        else {
            this.errorMessage = onfe.getMessage();
        }
        return objectNotFoundResult;
    }
    
    // AUTOGENERATED
    
    public void setException(Exception exception) {
        this.exception = exception;
    }

    public Exception getException() {
        return exception;
    }
    
    @JSON
    public String getErrorMessage() {
        return errorMessage;
    }

}
