<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
  
  <package name="ajax" namespace="/ajax" extends="default">
    
    <result-types>
      <!-- JSON result type -->
      <result-type name="json" default="true" class="code.google.struts2jsonresult.JSONResult">
        <param name="prettyPrint">true</param>
        <param name="out.noCache">true</param>
      </result-type>
    </result-types>
    
    <!-- Interceptors -->
    <interceptors>
      <interceptor name="refreshUser" class="refreshUserInterceptor" />
      <interceptor name="prefetch" class="prefetchInterceptor" />
      <interceptor name="settings"	class="settingsInterceptor" />
      
      <interceptor-stack name="authenticationStack">
        <interceptor-ref name="exception" />
        <interceptor-ref name="completeStack" />
        <interceptor-ref name="refreshUser" />
        <interceptor-ref name="settings" />
       <interceptor-ref name="validation">
          <param name="validateAnnotatedMethodOnly">true</param>
      </interceptor-ref>
        
      </interceptor-stack>
      
      <interceptor-stack name="prefetchStack">
        <interceptor-ref name="exception" />
        <interceptor-ref name="prefetch" />
        <interceptor-ref name="completeStack" />
        <interceptor-ref name="refreshUser" />
        <interceptor-ref name="settings" />
        <interceptor-ref name="validation">
          <param name="validateAnnotatedMethodOnly">true</param>
      </interceptor-ref>
      </interceptor-stack>
      
      <interceptor-stack name="preparedStack">
        <interceptor-ref name="exception" />
        <interceptor-ref name="params" />
        <interceptor-ref name="prepare" />
        <interceptor-ref name="completeStack" />
        <interceptor-ref name="refreshUser" />
        <interceptor-ref name="settings" />
        <interceptor-ref name="validation">
          <param name="validateAnnotatedMethodOnly">true</param>
      </interceptor-ref>
      </interceptor-stack>
    </interceptors>
    
    <default-interceptor-ref name="authenticationStack" />

    <global-results>
      <result name="input" type="json">
        <param name="out.statusCode">500</param>
        <param name="target">fieldErrors</param>
      </result>
      <result name="ajaxException" type="chain">
        <param name="actionName">ajaxExceptionHandler</param>
      </result>
    </global-results>

    <!-- AJAX exceptions -->
    <global-exception-mappings>
      <exception-mapping result="ajaxException"
        exception="fi.hut.soberit.agilefant.exception.ObjectNotFoundException" />
      <exception-mapping result="ajaxException"
        exception="java.lang.IllegalArgumentException" />
      <exception-mapping result="ajaxException"
        exception="java.lang.RuntimeException" />         
    </global-exception-mappings>
    
    <action name="ajaxExceptionHandler" class="ajaxExceptionHandler" method="handle">
      <result name="objectNotFound" type="json">
        <param name="out.statusCode">404</param>
        <param name="patterns">+errorMessage, +trace, -*</param>
      </result>
      <result name="conflict" type="json">
        <param name="out.statusCode">409</param>
        <param name="patterns">+errorMessage, +trace, -*</param>
      </result>
      <result name="input" type="json">
        <param name="out.statusCode">500</param>
        <param name="patterns">+errorMessage, +trace, -*</param>
      </result>
      <result name="genericException" type="json">
        <param name="out.statusCode">500</param>
        <param name="patterns">+errorMessage, +trace, -*</param>
      </result>
    </action>
    
    
    <!-- AJAX actions -->
    
    
    <!-- Menu actions -->
    <action name="menuData" method="constructBacklogMenuData" class="menuAction">
        <result type="json">
          <param name="target">menuData</param>
          <param name="patterns">-class, -*.class, -*.*.class</param>
        </result>
    </action>
    <action name="updateOpenMenus" method="updateOpenMenus" class="menuAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    <!-- /Menu actions -->
    
    
    
    <!-- Backlog actions -->
    <action name="retrieveStories" method="retrieveStories" class="backlogAction">
      <result name="success" type="json">
        <param name="target">stories</param>
      </result>
    </action>
    
    <action name="retrieveSubBacklogs" method="retrieveSubBacklogs" class="backlogAction">
      <result name="success" type="json">
        <param name="target">backlogs</param>
      </result>
    </action>
    
    <action name="addAssignees" method="addAssignees" class="backlogAction">
      <result name="success" type="json">
        <param name="target">backlog</param>
        <param name="patterns">+assignments, +assignments.user.id</param>
      </result>
    </action>
    
    <!-- /Backlog actions -->
    
    
    
    <!-- Product actions -->
    <action name="createProduct" method="create" class="productAction">
      <result type="dispatcher">/WEB-INF/jsp/forms/createProduct.jsp</result>
    </action>
    
    <action name="retrieveProduct" method="retrieve" class="productAction">
      <result name="success" type="json">
        <param name="target">product</param>
        <param name="patterns">+stories, +stories.responsibles, +projects</param>
      </result>
    </action>
    
    <action name="retrieveAllProducts" method="retrieveAll" class="productAction">
      <result name="success" type="json">
        <param name="target">products</param>
      </result>
    </action>
    
    <action name="storeProduct" method="store" class="productAction">
      <interceptor-ref name="prefetchStack"/>
      <result name="success" type="json">
        <param name="target">product</param>
      </result>
    </action>
    
    <action name="storeNewProduct" method="store" class="productAction">
      <result name="success" type="json">
        <param name="target">product</param>
      </result>
    </action>
    <!-- /Product actions -->
    

    
    <!-- Project actions -->
    <action name="createProject" method="create" class="projectAction">
      <result type="dispatcher">/WEB-INF/jsp/forms/createProject.jsp</result>
    </action>
    
    <action name="storeProject" method="store" class="projectAction">    
      <interceptor-ref name="prefetchStack"/>
      <result name="success" type="json">
        <param name="target">project</param>
      </result>
    </action>

		<action name="deleteProject" method="delete" class="projectAction">
			<result name="success" type="httpheader">
				<param name="status">200</param>
			</result>
		</action>
    
   <action name="storeNewProject" method="store" class="projectAction">    
      <result name="success" type="json">
        <param name="target">project</param>
      </result>
    </action>
    
    <action name="projectData" class="projectAction" method="projectData">
      <result name="success" type="json">
        <param name="target">project</param>
        <param name="patterns">+children, +children.stories, +stories, +stories.responsibles, -stories.backlog, +assignments, +assignments.user</param>
      </result>
    </action>
    
    <action name="projectTabs" method="retrieve" class="projectAction">
      <result type="dispatcher">/WEB-INF/jsp/tabs/projectTabs.jsp</result>
    </action>
    
    <action name="projectMetrics" class="projectAction" method="projectMetrics">
      <result name="success" type="dispatcher">/WEB-INF/jsp/inc/projectMetrics.jsp</result>
    </action>
    <!-- /Project actions -->
    

    
    <!-- Iteration actions -->
    <action name="createIteration" method="create" class="iterationAction">
      <result type="dispatcher">/WEB-INF/jsp/forms/createIteration.jsp</result>
    </action>

    <action name="storeNewIteration" method="store" class="iterationAction">
      <result name="success" type="json">
        <param name="target">iteration</param>
      </result>
    </action>
    
    <action name="storeIteration" method="store" class="iterationAction">
      <interceptor-ref name="prefetchStack"/>
      <result name="success" type="json">
        <param name="target">iteration</param>
      </result>
    </action>
    
    <action name="retrieveIteration" class="iterationAction" method="retrieve">
      <result name="success" type="json">
        <param name="target">iteration</param>
      </result>
    </action>
    
    <action name="iterationData" class="iterationAction" method="fetchIterationData">
      <result name="success" type="json">
        <param name="target">iteration</param>
        <param name="patterns">+stories, +stories.tasks, +tasks, +assignments, +hourEntries, +*.user, +*.responsibles, +*.workingOnTask</param>
      </result>
    </action>
        
    <action name="iterationMetrics" class="iterationAction" method="iterationMetrics">
      <result name="success" type="dispatcher">/WEB-INF/jsp/inc/iterationMetrics.jsp</result>
    </action>
            
    <action name="dailyWorkData" class="dailyWorkAction" method="retrieve">
      <result name="success" type="json">
      	<param name="patterns">+assignedTasks, +assignedTasks.responsibles, +nextTasks, +nextTasks.responsibles, +*.workingOnTask, +user, -locale</param>
      </result>
    </action>
    
    <action name="deleteIteration" method="delete" class="iterationAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    
    <action name="iterationTabs" method="edit" class="iterationAction">
      <result type="dispatcher">/WEB-INF/jsp/tabs/iterationTabs.jsp</result>
    </action>
    <!-- /Iteration actions -->



    <!-- Story actions -->
    <action name="createStoryForm" method="execute" class="storyAction">
          <result type="dispatcher">/WEB-INF/jsp/forms/createStory.jsp</result>
    </action>
    
    <action name="createStory" method="create" class="storyAction">
      <result type="json">
        <param name="target">story</param>
      </result>
    </action>
    
    <action name="storeStory" method="store" class="storyAction">
      <interceptor-ref name="prefetchStack"/>
      <result type="json">
        <param name="target">story</param>
        <param name="patterns">+responsibles</param>
      </result>
    </action>
    
    <action name="retrieveStory" method="retrieve" class="storyAction">
       <result type="json">
        <param name="target">story</param>
        <param name="patterns">+tasks, +children, +parent</param>
       </result>
    </action>
    
    <action name="deleteStory" method="delete" class="storyAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    
    <action name="moveStory" method="moveStory" class="storyAction">
      <result name="success" type="json">
        <param name="target">story</param>
      </result>
    </action>
    
    <action name="rankStory" method="rankStory" class="storyAction">
      <result name="success" type="json">
        <param name="target">story</param>
      </result>
    </action>
    
    <action name="splitStory" method="split" class="storySplitAction">
      <interceptor-ref name="preparedStack" />
      <result name="success" type="json">
      </result>
    </action>
    
    <action name="storyContents" method="storyContents" class="storyAction">
      <result name="success" type="json">
        <param name="target">storyContents</param>
      </result>
    </action>
    
    <action name="calculateStoryMetrics" method="metrics" class="storyAction">
      <result name="success" type="json">
        <param name="target">metrics</param>
      </result>
    </action>
    <!-- /Story actions -->



    <!-- Task actions -->
    <action name="deleteTask" method="delete" class="taskAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    
    <action name="storeTask" method="store" class="taskAction" >
      <interceptor-ref name="prefetchStack" />
      <result name="success" type="json">
        <param name="target">task</param>
        <param name="patterns">+responsibles</param>
      </result>
    </action>
    
    <action name="createTask" method="store" class="taskAction" >
      <result name="success" type="json">
        <param name="target">task</param>
        <param name="patterns">+responsibles</param>
      </result>
    </action>
    
    <action name="retrieveTask" method="retrieve" class="taskAction">
      <result name="success" type="json">
        <param name="target">task</param>
      </result>
    </action>
    
    <action name="moveTask" method="move" class="taskAction">
      <result name="success" type="json">
        <param name="target">task</param>
      </result>
    </action>
   
    <action name="rankTaskAndMoveUnder" method="rankUnder" class="taskAction">
      <result name="success" type="json">
        <param name="target">task</param>
      </result>
    </action>
    
    <action name="resetOriginalEstimate" method="resetOriginalEstimate" class="taskAction">
      <result name="success" type="json">
        <param name="target">task</param>
      </result>
    </action>
    <!-- /Task actions -->

    <!-- Daily work actions -->
    <action name="addToWorkQueue" method="addToWorkQueue" class="dailyWorkAction">
      <result name="success" type="json">
        <param name="target">task</param>
        <param name="patterns">+*.responsibles, +*.workingOnTask</param>
      </result>
    </action>

    <action name="deleteFromWorkQueue" method="deleteFromWorkQueue" class="dailyWorkAction">
      <result name="success" type="json">
        <param name="target">task</param>
        <param name="patterns">+*.responsibles, +*.workingOnTask</param>
      </result>
    </action>

    <action name="rankDailyTaskAndMoveUnder" method="rankQueueTaskAndMoveUnder" class="dailyWorkAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    <!-- /Daily work actions -->


    <!-- User actions -->
    <action name="retrieveUser" method="retrieve" class="userAction">
      <result name="success" type="json">
        <param name="target">user</param>
        <param name="patterns">+teams</param>
      </result>
    </action>
    
    
    <action name="storeUser" method="store" class="userAction">
      <interceptor-ref name="prefetchStack" />
      <result name="success" type="json">
        <param name="target">user</param>
        <param name="patterns">+teams</param>
      </result>
    </action>
    
    <action name="storeNewUser" method="store" class="userAction">
      <result name="success" type="json">
        <param name="target">user</param>
      </result>
    </action>
    
    <action name="userTabs" method="retrieve" class="userAction">
      <result type="dispatcher">/WEB-INF/jsp/tabs/userTabs.jsp</result>
    </action>
    
    <action name="retrieveAllUsers" method="retrieveAll" class="userAction">
      <result name="success" type="json">
        <param name="target">users</param>
      </result>
    </action>
    <!-- /User actions -->



    <!-- Team actions -->
    <action name="createTeam" method="create" class="teamAction">
      <result type="dispatcher">/WEB-INF/jsp/forms/createTeam.jsp</result>
    </action>
    
    <action name="storeNewTeam" method="store" class="teamAction">   
      <result name="success" type="json">
        <param name="target">team</param>
      </result>
    </action>
    
    <action name="storeTeam" method="store" class="teamAction">  
      <interceptor-ref name="prefetchStack" />
      <result name="success" type="json">
        <param name="target">team</param>
      </result>
    </action>
    
    <action name="teamTabs" method="retrieve" class="teamAction">
      <result type="dispatcher">/WEB-INF/jsp/tabs/teamTabs.jsp</result>
    </action>
    
    <action name="retrieveAllTeams" method="retrieveAll" class="teamAction">
      <result name="success" type="json">
        <param name="target">teamList</param>
      </result>
    </action>
    <!-- /Team actions -->
    
    <!-- Assigment actions -->
    
    <action name="modifyAssigment" method="modify" class="assignmentAction">
        <interceptor-ref name="prefetchStack" />
    	<result name="success" type="json">
    		<param name="target">assignment</param>
    	</result>
    </action>
    
    <action name="deleteAssignment" method="delete" class="assignmentAction">
      <result name="success" type="httpheader">
        <param name="status">200</param>
      </result>
    </action>
    
    <!-- /Assigment actions -->
    
    <!-- User load actions -->
    <action name="defaultUserLoad" method="retrieveUserLoad" class="userLoadAction">
    	<result name="success" type="json">
    		<param name="target">userLoadData</param>
    	</result>
    </action>
    
    <action name="userLoadLimits" method="dailyLoadLimits" class="userLoadAction">
      <result name="success" type="json">
        <param name="target">loadLimits</param>
      </result>
    </action>
    <!-- /User load actions -->

	<!-- Utility actions -->
	<action name="userChooserData" class="autocompleteAction" method="userTeamData">
		<result name="success" type="json">
			<param name="target">autocompleteData</param>
			<param name="patterns">-class</param>
		</result>
	</action>
	<action name="teamChooserData" class="autocompleteAction" method="teamData">
    <result name="success" type="json">
      <param name="target">autocompleteData</param>
      <param name="patterns">-class</param>
    </result>
  </action>
	<action name="backlogChooserData" class="autocompleteAction" method="backlogData">
		<result name="success" type="json">
			<param name="target">autocompleteData</param>
			<param name="patterns">-class</param>
		</result>
	</action>
	<action name="productChooserData" class="autocompleteAction" method="productData">
    <result name="success" type="json">
      <param name="target">autocompleteData</param>
      <param name="patterns">-class</param>
    </result>
  </action>
  
	<action name="currentIterationChooserData" class="autocompleteAction"
		method="currentIterationData">
		<result name="success" type="json">
			<param name="target">autocompleteData</param>
			<param name="patterns">-class</param>
		</result>
	</action>
	<!-- /Utility actions -->
	
	<!-- timesheets -->
	<action name="logStoryEffort" class="hourEntryAction" method="logStoryEffort">
	 <result name="success" type="httpheader">
	   <param name="status">200</param>
	 </result>
	</action>
	<!-- /timesheets -->
  </package>
  
</struts>
